version: '3.8'

networks:
  coolify:
    external: true

volumes:
  postgres_data:
  redis_data:
  n8n_data:

services:
  # ======================
  # BASE DE DONNÉES
  # ======================
  postgres:
    image: 'postgres:15-alpine'
    container_name: maestro-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_INITDB_ARGS: '--encoding=UTF8 --lc-collate=C --lc-ctype=C'
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'
      - './scripts/init:/docker-entrypoint-initdb.d:ro'
    networks:
      - coolify
    ports:  # ✅ PORTS pour accès SGBD externe
      - '5432:5432'
    mem_limit: 1g
    mem_reservation: 512m
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ======================
  # CACHE REDIS
  # ======================
  redis:
    image: 'redis:7-alpine'
    container_name: maestro-cache
    restart: unless-stopped
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 60 1
      --appendonly no
    volumes:
      - 'redis_data:/data'
    networks:
      - coolify
    expose:
      - 6379
    mem_limit: 384m
    mem_reservation: 256m
    healthcheck:
      test: ["CMD", "redis-cli", "--pass", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  # ======================
  # ORCHESTRATEUR N8N - https://n8n.maestro.ara-solutions.cloud
  # ======================
  n8n:
    image: 'n8nio/n8n:latest'
    container_name: maestro-n8n
    restart: unless-stopped
    environment:
      N8N_BASIC_AUTH_ACTIVE: 'true'
      N8N_BASIC_AUTH_USER: '${N8N_BASIC_AUTH_USER}'
      N8N_BASIC_AUTH_PASSWORD: '${N8N_BASIC_AUTH_PASSWORD}'
      N8N_ENCRYPTION_KEY: '${N8N_ENCRYPTION_KEY}'
      N8N_HOST: 'n8n.maestro.ara-solutions.cloud'  # ✅ Sous-domaine n8n
      N8N_PORT: '5678'
      N8N_PROTOCOL: 'https'
      WEBHOOK_URL: 'https://n8n.maestro.ara-solutions.cloud'  # ✅ URL webhook correcte
      DB_TYPE: 'postgresdb'
      DB_POSTGRESDB_HOST: 'postgres'
      DB_POSTGRESDB_PORT: '5432'
      DB_POSTGRESDB_DATABASE: 'n8n'
      DB_POSTGRESDB_USER: '${POSTGRES_USER}'
      DB_POSTGRESDB_PASSWORD: '${POSTGRES_PASSWORD}'
      EXECUTIONS_PROCESS: 'main'
      GENERIC_TIMEZONE: 'Europe/Paris'
      N8N_METRICS: 'false'
      N8N_VERSION_NOTIFICATIONS_ENABLED: 'false'
    volumes:
      - 'n8n_data:/home/node/.n8n'
      - './workflows:/home/node/workflows'
    networks:
      - coolify
    expose:
      - 5678
    mem_limit: 1g
    mem_reservation: 512m
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:  # ✅ Labels pour n8n.maestro.ara-solutions.cloud
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.maestro.ara-solutions.cloud`)"
      - "traefik.http.routers.n8n.entrypoints=https"
      - "traefik.http.routers.n8n.tls=true"
      - "traefik.http.routers.n8n.tls.certresolver=letsencrypt"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  # ======================
  # API BACKEND - https://api.maestro.ara-solutions.cloud
  # ======================
  api:
    image: 'node:18-alpine'
    container_name: maestro-api
    restart: unless-stopped
    working_dir: /app
    environment:
      NODE_ENV: 'production'
      PORT: '3001'
      DATABASE_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}'
      REDIS_URL: 'redis://:${REDIS_PASSWORD}@redis:6379'
      GEMINI_API_KEY: '${GEMINI_API_KEY}'
      N8N_WEBHOOK_URL: 'http://n8n:5678/webhook'
      JWT_SECRET: '${JWT_SECRET}'
    volumes:
      - './api:/app'
    networks:
      - coolify
    expose:
      - 3001
    mem_limit: 512m
    mem_reservation: 256m
    command: |
      sh -c "
        cd /app &&
        if [ ! -f package.json ]; then
          echo '{\"name\":\"maestro-api\",\"version\":\"1.0.0\",\"dependencies\":{\"express\":\"^4.18.2\",\"cors\":\"^2.8.5\",\"pg\":\"^8.11.3\"}}' > package.json
        fi &&
        if [ ! -f server.js ]; then
          cat > server.js << 'EOJS'
      const express = require('express');
      const cors = require('cors');
      const app = express();
      app.use(cors());
      app.use(express.json());
      
      app.get('/health', (req, res) => {
        res.json({ status: 'healthy', service: 'MAESTRO API', version: '1.0.0', timestamp: new Date().toISOString() });
      });
      
      app.get('/api/health', (req, res) => {
        res.json({ status: 'ok', api: 'running', timestamp: new Date().toISOString() });
      });
      
      app.get('/api/analyses', (req, res) => {
        res.json([]);
      });
      
      app.get('/api/stats', (req, res) => {
        res.json({ projects: 1, analyses: 0, status: 'operational' });
      });
      
      app.post('/api/request', (req, res) => {
        console.log('New request:', req.body);
        res.json({ success: true, message: 'Request received', id: Date.now().toString() });
      });
      
      app.use((req, res) => {
        res.status(404).json({ error: 'Route not found', path: req.path });
      });
      
      const PORT = process.env.PORT || 3001;
      app.listen(PORT, '0.0.0.0', () => {
        console.log(\`MAESTRO API running on port \${PORT}\`);
      });
      EOJS
        fi &&
        npm install &&
        node server.js
      "
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:  # ✅ Labels pour api.maestro.ara-solutions.cloud
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.maestro.ara-solutions.cloud`)"
      - "traefik.http.routers.api.entrypoints=https"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=3001"

  # ======================
  # WEB FRONTEND - https://maestro.ara-solutions.cloud (port 8080)
  # ======================
  web:
    image: 'nginx:alpine'
    container_name: maestro-web
    restart: unless-stopped
    volumes:
      - './interface:/usr/share/nginx/html:ro'
      - './nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
    networks:
      - coolify
    ports:  # ✅ Port 8080 car 80 est pris
      - '8080:80'
    mem_limit: 128m
    mem_reservation: 64m
    depends_on:
      - api
      - n8n
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:  # ✅ Labels pour maestro.ara-solutions.cloud
      - "traefik.enable=true"
      - "traefik.http.routers.maestro.rule=Host(`maestro.ara-solutions.cloud`)"
      - "traefik.http.routers.maestro.entrypoints=https"
      - "traefik.http.routers.maestro.tls=true"
      - "traefik.http.routers.maestro.tls.certresolver=letsencrypt"
      - "traefik.http.services.maestro.loadbalancer.server.port=80"